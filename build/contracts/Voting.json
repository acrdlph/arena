{
  "contractName": "Voting",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "name": "id",
          "type": "uint256"
        },
        {
          "name": "text",
          "type": "string"
        },
        {
          "name": "voteCount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_of",
          "type": "address"
        },
        {
          "name": "_reason",
          "type": "bytes32"
        },
        {
          "name": "_time",
          "type": "uint256"
        }
      ],
      "name": "tokensLockedAtTime",
      "outputs": [
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_reason",
          "type": "bytes32"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_time",
          "type": "uint256"
        }
      ],
      "name": "lock",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_of",
          "type": "address"
        }
      ],
      "name": "unlock",
      "outputs": [
        {
          "name": "unlockableTokens",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "numTokens",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_of",
          "type": "address"
        }
      ],
      "name": "totalBalanceOf",
      "outputs": [
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_reason",
          "type": "bytes32"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_time",
          "type": "uint256"
        }
      ],
      "name": "transferWithLock",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_of",
          "type": "address"
        },
        {
          "name": "_reason",
          "type": "bytes32"
        }
      ],
      "name": "tokensUnlockable",
      "outputs": [
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "exponent",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_of",
          "type": "address"
        },
        {
          "name": "_reason",
          "type": "bytes32"
        }
      ],
      "name": "tokensLocked",
      "outputs": [
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "lockReason",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_reason",
          "type": "bytes32"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "increaseLockAmount",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "slope",
      "outputs": [
        {
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "poolBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "numTokens",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "voters",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_reason",
          "type": "bytes32"
        },
        {
          "name": "_time",
          "type": "uint256"
        }
      ],
      "name": "extendLock",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_of",
          "type": "address"
        }
      ],
      "name": "getUnlockableTokens",
      "outputs": [
        {
          "name": "unlockableTokens",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "numTokens",
          "type": "uint256"
        }
      ],
      "name": "priceToMint",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "numTokens",
          "type": "uint256"
        }
      ],
      "name": "rewardForBurn",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "locked",
      "outputs": [
        {
          "name": "amount",
          "type": "uint256"
        },
        {
          "name": "validity",
          "type": "uint256"
        },
        {
          "name": "claimed",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "proposalCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_candidateId",
          "type": "uint256"
        }
      ],
      "name": "votedEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "totalCost",
          "type": "uint256"
        }
      ],
      "name": "Minted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "reward",
          "type": "uint256"
        }
      ],
      "name": "Burned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_of",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_reason",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_validity",
          "type": "uint256"
        }
      ],
      "name": "Locked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_of",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_reason",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Unlocked",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_text",
          "type": "string"
        }
      ],
      "name": "addProposal",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_proposalId",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040526040805190810160405280601281526020017f416368696c6c2d4172656e612d546f6b656e000000000000000000000000000081525060069080519060200190620000519291906200010e565b506040805190810160405280600381526020017f4143480000000000000000000000000000000000000000000000000000000000815250600790805190602001906200009f9291906200010e565b506002600860006101000a81548160ff021916908360ff1602179055506001600860016101000a81548163ffffffff021916908363ffffffff1602179055506012600860056101000a81548160ff021916908360ff1602179055503480156200010757600080fd5b50620001bd565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200015157805160ff191683800117855562000182565b8280016001018555821562000182579182015b828111156200018157825182559160200191906001019062000164565b5b50905062000191919062000195565b5090565b620001ba91905b80821115620001b65760008160009055506001016200019c565b5090565b90565b6138fe80620001cd6000396000f3006080604052600436106101b7576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630121b93f146101bc578063013cf08b146101e957806306fdde031461029d578063095ea7b31461032d578063179e91f11461039257806318160ddd1461040157806323b872dd1461042c5780632e82aaf2146104b15780632f6c493c1461050e5780632fdae3c514610565578063313ce567146105ce57806342966c68146105ff5780634b0ee02a1461062c5780634cb5465f146106835780635294d0e81461070057806352f6ee58146107655780635ca48d8c1461079657806366188463146107fb57806370a082311461086057806371d66f00146108b757806381fc4d901461092057806383caf2751461097357806395d89b41146109aa57806396365d4414610a3a578063a0712d6814610a65578063a3ec138d14610a85578063a9059cbb14610ae0578063a9dab16714610b45578063ab4a2eb314610b98578063b9d3674314610bef578063c544682b14610c30578063d71be8db14610c71578063d73dd62314610ce8578063da35c66414610d4d578063dd62ed3e14610d78575b600080fd5b3480156101c857600080fd5b506101e760048036038101908080359060200190929190505050610def565b005b3480156101f557600080fd5b5061021460048036038101908080359060200190929190505050610ecd565b6040518084815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b83811015610260578082015181840152602081019050610245565b50505050905090810190601f16801561028d5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b3480156102a957600080fd5b506102b2610f8f565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102f25780820151818401526020810190506102d7565b50505050905090810190601f16801561031f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561033957600080fd5b50610378600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061102d565b604051808215151515815260200191505060405180910390f35b34801561039e57600080fd5b506103eb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080356000191690602001909291908035906020019092919050505061111f565b6040518082815260200191505060405180910390f35b34801561040d57600080fd5b506104166111ea565b6040518082815260200191505060405180910390f35b34801561043857600080fd5b50610497600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506111f4565b604051808215151515815260200191505060405180910390f35b3480156104bd57600080fd5b506104f4600480360381019080803560001916906020019092919080359060200190929190803590602001909291905050506115b4565b604051808215151515815260200191505060405180910390f35b34801561051a57600080fd5b5061054f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061198f565b6040518082815260200191505060405180910390f35b34801561057157600080fd5b506105cc600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050611cce565b005b3480156105da57600080fd5b506105e3611d4b565b604051808260ff1660ff16815260200191505060405180910390f35b34801561060b57600080fd5b5061062a60048036038101908080359060200190929190505050611d5e565b005b34801561063857600080fd5b5061066d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f0e565b6040518082815260200191505060405180910390f35b34801561068f57600080fd5b506106e6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080356000191690602001909291908035906020019092919080359060200190929190505050611ff0565b604051808215151515815260200191505060405180910390f35b34801561070c57600080fd5b5061074f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080356000191690602001909291905050506123cc565b6040518082815260200191505060405180910390f35b34801561077157600080fd5b5061077a612509565b604051808260ff1660ff16815260200191505060405180910390f35b3480156107a257600080fd5b506107e5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560001916906020019092919050505061251c565b6040518082815260200191505060405180910390f35b34801561080757600080fd5b50610846600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506125f2565b604051808215151515815260200191505060405180910390f35b34801561086c57600080fd5b506108a1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612884565b6040518082815260200191505060405180910390f35b3480156108c357600080fd5b50610902600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506128cd565b60405180826000191660001916815260200191505060405180910390f35b34801561092c57600080fd5b506109596004803603810190808035600019169060200190929190803590602001909291905050506128fd565b604051808215151515815260200191505060405180910390f35b34801561097f57600080fd5b50610988612bdd565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b3480156109b657600080fd5b506109bf612bf3565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156109ff5780820151818401526020810190506109e4565b50505050905090810190601f168015610a2c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610a4657600080fd5b50610a4f612c91565b6040518082815260200191505060405180910390f35b610a8360048036038101908080359060200190929190505050612c97565b005b348015610a9157600080fd5b50610ac6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612e13565b604051808215151515815260200191505060405180910390f35b348015610aec57600080fd5b50610b2b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612e33565b604051808215151515815260200191505060405180910390f35b348015610b5157600080fd5b50610b7e600480360381019080803560001916906020019092919080359060200190929190505050613058565b604051808215151515815260200191505060405180910390f35b348015610ba457600080fd5b50610bd9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061332d565b6040518082815260200191505060405180910390f35b348015610bfb57600080fd5b50610c1a60048036038101908080359060200190929190505050613404565b6040518082815260200191505060405180910390f35b348015610c3c57600080fd5b50610c5b6004803603810190808035906020019092919050505061343e565b6040518082815260200191505060405180910390f35b348015610c7d57600080fd5b50610cc0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035600019169060200190929190505050613478565b6040518084815260200183815260200182151515158152602001935050505060405180910390f35b348015610cf457600080fd5b50610d33600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506134bc565b604051808215151515815260200191505060405180910390f35b348015610d5957600080fd5b50610d626136b8565b6040518082815260200191505060405180910390f35b348015610d8457600080fd5b50610dd9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506136be565b6040518082815260200191505060405180910390f35b6001600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610e5033612884565b600a60008381526020019081526020016000206002015401600a600083815260200190815260200160002060020181905550610e9c62123456600102610e9533612884565b60646115b4565b50807ffff3c900d938d21d0990d786e819f29b8d05c1ef587b462b939609625b684b1660405160405180910390a250565b600a602052806000526040600020600091509050806000015490806001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f7f5780601f10610f5457610100808354040283529160200191610f7f565b820191906000526020600020905b815481529060010190602001808311610f6257829003601f168201915b5050505050908060020154905083565b60068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110255780601f10610ffa57610100808354040283529160200191611025565b820191906000526020600020905b81548152906001019060200180831161100857829003601f168201915b505050505081565b600081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b600081600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085600019166000191681526020019081526020016000206001015411156111e357600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084600019166000191681526020019081526020016000206000015490505b9392505050565b6000600354905090565b6000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561124457600080fd5b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111515156112cf57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561130b57600080fd5b61135d82600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461374590919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506113f282600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461375e90919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506114c482600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461374590919063ffffffff16565b600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b6000806115ca834261375e90919063ffffffff16565b905060006115d8338761251c565b146040805190810160405280601581526020017f546f6b656e7320616c7265616479206c6f636b656400000000000000000000008152509015156116b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561167c578082015181840152602081019050611661565b50505050905090810190601f1680156116a95780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008414156040805190810160405280601381526020017f416d6f756e742063616e206e6f7420626520300000000000000000000000000081525090151561179b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611760578082015181840152602081019050611745565b50505050905090810190601f16801561178d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000876000191660001916815260200190815260200160002060000154141561186f576000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208590806001815401808255809150509060018203906000526020600020016000909192909190915090600019169055505b6118793085612e33565b5060606040519081016040528085815260200182815260200160001515815250600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008760001916600019168152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548160ff02191690831515021790555090505084600019163373ffffffffffffffffffffffffffffffffffffffff167fea90ef40963535482537f0689e05cb8d259e459ebd21530e826702294d0eafdd8684604051808381526020018281526020019250505060405180910390a360019150509392505050565b60008060008090505b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811015611bde57611a40846000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515611a3057fe5b90600052602060002001546123cc565b91506000821115611bd157611a5e828461375e90919063ffffffff16565b925060018060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002084815481101515611aed57fe5b90600052602060002001546000191660001916815260200190815260200160002060020160006101000a81548160ff0219169083151502179055506000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081815481101515611b7357fe5b9060005260206000200154600019168473ffffffffffffffffffffffffffffffffffffffff167f11f87fd5adcd05786919b8b868f59a70d78ae4eb6f305c5927f9c5b1659841a4846040518082815260200191505060405180910390a35b8080600101915050611998565b6000831115611cc7573073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015611c8a57600080fd5b505af1158015611c9e573d6000803e3d6000fd5b505050506040513d6020811015611cb457600080fd5b8101908080519060200190929190505050505b5050919050565b600b60008154809291906001019190505550606060405190810160405280600b5481526020018281526020016000815250600a6000600b548152602001908152602001600020600082015181600001556020820151816001019080519060200190611d3a92919061382d565b506040820151816002015590505050565b600860059054906101000a900460ff1681565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515611dae57600080fd5b611db78261343e565b9050611dce8260035461374590919063ffffffff16565b600381905550611e2682600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461374590919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611e7e8160055461374590919063ffffffff16565b6005819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611eca573d6000803e3d6000fd5b507fcec1bae6e024d929f2929f3478ce70f55f9c636c8ef7b5073a61d7c3a432451b8282604051808381526020018281526020019250505060405180910390a15050565b600080611f1a83612884565b9150600090505b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811015611fea57611fdb611fcc846000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002084815481101515611fbc57fe5b906000526020600020015461251c565b8361375e90919063ffffffff16565b91508080600101915050611f21565b50919050565b600080612006834261375e90919063ffffffff16565b90506000612014878761251c565b146040805190810160405280601581526020017f546f6b656e7320616c7265616479206c6f636b656400000000000000000000008152509015156120f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156120b857808201518184015260208101905061209d565b50505050905090810190601f1680156120e55780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008414156040805190810160405280601381526020017f416d6f756e742063616e206e6f742062652030000000000000000000000000008152509015156121d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561219c578082015181840152602081019050612181565b50505050905090810190601f1680156121c95780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600087600019166000191681526020019081526020016000206000015414156122ab576000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208590806001815401808255809150509060018203906000526020600020016000909192909190915090600019169055505b6122b53085612e33565b5060606040519081016040528085815260200182815260200160001515815250600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008760001916600019168152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548160ff02191690831515021790555090505084600019168673ffffffffffffffffffffffffffffffffffffffff167fea90ef40963535482537f0689e05cb8d259e459ebd21530e826702294d0eafdd8684604051808381526020018281526020019250505060405180910390a36001915050949350505050565b600042600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008460001916600019168152602001908152602001600020600101541115801561249f5750600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000836000191660001916815260200190815260200160002060020160009054906101000a900460ff16155b1561250357600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083600019166000191681526020019081526020016000206000015490505b92915050565b600860009054906101000a900460ff1681565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000836000191660001916815260200190815260200160002060020160009054906101000a900460ff1615156125ec57600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083600019166000191681526020019081526020016000206000015490505b92915050565b600080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508083101515612704576000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612798565b612717838261374590919063ffffffff16565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000602052816000526040600020818154811015156128e857fe5b90600052602060002001600091509150505481565b60008061290a338561251c565b116040805190810160405280601081526020017f4e6f20746f6b656e73206c6f636b6564000000000000000000000000000000008152509015156129e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156129ae578082015181840152602081019050612993565b50505050905090810190601f1680156129db5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506129f43083612e33565b50612a6382600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086600019166000191681526020019081526020016000206000015461375e90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085600019166000191681526020019081526020016000206000018190555082600019163373ffffffffffffffffffffffffffffffffffffffff167fea90ef40963535482537f0689e05cb8d259e459ebd21530e826702294d0eafdd600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000876000191660001916815260200190815260200160002060000154600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000886000191660001916815260200190815260200160002060010154604051808381526020018281526020019250505060405180910390a36001905092915050565b600860019054906101000a900463ffffffff1681565b60078054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612c895780601f10612c5e57610100808354040283529160200191612c89565b820191906000526020600020905b815481529060010190602001808311612c6c57829003601f168201915b505050505081565b60055481565b6000612ca282613404565b9050803410151515612cb357600080fd5b612cc88260035461375e90919063ffffffff16565b600381905550612d2082600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461375e90919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612d788160055461375e90919063ffffffff16565b60058190555080341115612dd0573373ffffffffffffffffffffffffffffffffffffffff166108fc8234039081150290604051600060405180830381858888f19350505050158015612dce573d6000803e3d6000fd5b505b7f8a9dcf4e150b1153011b29fec302d5be0c13e84fa8f56ab78587f778a32a90dd8282604051808381526020018281526020019250505060405180910390a15050565b60096020528060005260406000206000915054906101000a900460ff1681565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515612e8357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515612ebf57600080fd5b612f1182600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461374590919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612fa682600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461375e90919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b600080613065338561251c565b116040805190810160405280601081526020017f4e6f20746f6b656e73206c6f636b656400000000000000000000000000000000815250901515613144576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156131095780820151818401526020810190506130ee565b50505050905090810190601f1680156131365780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506131b382600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086600019166000191681526020019081526020016000206001015461375e90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085600019166000191681526020019081526020016000206001018190555082600019163373ffffffffffffffffffffffffffffffffffffffff167fea90ef40963535482537f0689e05cb8d259e459ebd21530e826702294d0eafdd600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000876000191660001916815260200190815260200160002060000154600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000886000191660001916815260200190815260200160002060010154604051808381526020018281526020019250505060405180910390a36001905092915050565b600080600090505b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508110156133fe576133ef6133e0846000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020848154811015156133d057fe5b90600052602060002001546123cc565b8361375e90919063ffffffff16565b91508080600101915050613335565b50919050565b60006134376005546134296134248560035461375e90919063ffffffff16565b61377a565b61374590919063ffffffff16565b9050919050565b600061347161346061345b8460035461374590919063ffffffff16565b61377a565b60055461374590919063ffffffff16565b9050919050565b6001602052816000526040600020602052806000526040600020600091509150508060000154908060010154908060020160009054906101000a900460ff16905083565b600061354d82600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461375e90919063ffffffff16565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b600b5481565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600082821115151561375357fe5b818303905092915050565b6000818301905082811015151561377157fe5b80905092915050565b6000806001600860009054906101000a900460ff160160ff16905061380f600860009054906101000a900460ff1660ff16600860059054906101000a900460ff1660ff1602600a0a613801600860019054906101000a900463ffffffff1663ffffffff166137f38586890a61381790919063ffffffff16565b61381790919063ffffffff16565b61381790919063ffffffff16565b915050919050565b6000818381151561382457fe5b04905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061386e57805160ff191683800117855561389c565b8280016001018555821561389c579182015b8281111561389b578251825591602001919060010190613880565b5b5090506138a991906138ad565b5090565b6138cf91905b808211156138cb5760008160009055506001016138b3565b5090565b905600a165627a7a72305820d09b78785fc1e809fa1d4729aaa494a45bbf28cf73e587b277041fc53f6dc9460029",
  "deployedBytecode": "",
  "sourceMap": "234:1600:4:-;;;310:41:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;357:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;415:1;391:25;;;;;;;;;;;;;;;;;;;;444:1;422:23;;;;;;;;;;;;;;;;;;;;475:2;451:26;;;;;;;;;;;;;;;;;;;;234:1600:4;8:9:-1;5:2;;;30:1;27;20:12;5:2;234:1600:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "234:1600:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;878:953;;8:9:-1;5:2;;;30:1;27;20:12;5:2;878:953:4;;;;;;;;;;;;;;;;;;;;;;;;;;534:42;;8:9:-1;5:2;;;30:1;27;20:12;5:2;534:42:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;534:42:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;310:41:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;310:41:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;310:41:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1814:188:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1814:188:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3446:246:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3446:246:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;389:83:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;389:83:6;;;;;;;;;;;;;;;;;;;;;;;726:470:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;726:470:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;968:743:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;968:743:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6068:614;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6068:614:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;726:146:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;726:146:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;451:26:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;451:26:2;;;;;;;;;;;;;;;;;;;;;;;;;;;2050:416:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2050:416:1;;;;;;;;;;;;;;;;;;;;;;;;;;3850:291:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3850:291:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2061:606;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2061:606:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5630:284;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5630:284:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;391:25:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;391:25:2;;;;;;;;;;;;;;;;;;;;;;;;;;;2905:217:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2905:217:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3679:432:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3679:432:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1149:99:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1149:99:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;216:47:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;216:47:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4928:454:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4928:454:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;422:23:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;422:23:2;;;;;;;;;;;;;;;;;;;;;;;;;;;357:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;357:28:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;357:28:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;425:26:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;425:26:1;;;;;;;;;;;;;;;;;;;;;;;1420:496;;;;;;;;;;;;;;;;;;;;;;;;;;448:36:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;448:36:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;626:321:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;626:321:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4327:404:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4327:404:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6839:295;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6839:295:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1988:147:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1988:147:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2141:149;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2141:149:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;547:63:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;547:63:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2926:296:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2926:296:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;611:25:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;611:25:4;;;;;;;;;;;;;;;;;;;;;;;2321:153:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2321:153:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;878:953:4;1102:4;1081:6;:18;1088:10;1081:18;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;1364:21;1374:10;1364:9;:21::i;:::-;1329:9;:22;1339:11;1329:22;;;;;;;;;;;:32;;;:56;1294:9;:22;1304:11;1294:22;;;;;;;;;;;:32;;:91;;;;1703:42;1708:8;1703:42;;1718:21;1728:10;1718:9;:21::i;:::-;1741:3;1703:4;:42::i;:::-;;1812:11;1801:23;;;;;;;;;;878:953;:::o;534:42::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;310:41:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1814:188:9:-;1881:4;1925:6;1893:7;:19;1901:10;1893:19;;;;;;;;;;;;;;;:29;1913:8;1893:29;;;;;;;;;;;;;;;:38;;;;1963:8;1942:38;;1951:10;1942:38;;;1973:6;1942:38;;;;;;;;;;;;;;;;;;1993:4;1986:11;;1814:188;;;;:::o;3446:246:3:-;3564:14;3630:5;3598:6;:11;3605:3;3598:11;;;;;;;;;;;;;;;:20;3610:7;3598:20;;;;;;;;;;;;;;;;;:29;;;:37;3594:91;;;3658:6;:11;3665:3;3658:11;;;;;;;;;;;;;;;:20;3670:7;3658:20;;;;;;;;;;;;;;;;;:27;;;3649:36;;3594:91;3446:246;;;;;:::o;389:83:6:-;433:7;455:12;;448:19;;389:83;:::o;726:470:9:-;832:4;864:8;:15;873:5;864:15;;;;;;;;;;;;;;;;854:6;:25;;846:34;;;;;;;;904:7;:14;912:5;904:14;;;;;;;;;;;;;;;:26;919:10;904:26;;;;;;;;;;;;;;;;894:6;:36;;886:45;;;;;;;;960:1;945:17;;:3;:17;;;;937:26;;;;;;;;988:27;1008:6;988:8;:15;997:5;988:15;;;;;;;;;;;;;;;;:19;;:27;;;;:::i;:::-;970:8;:15;979:5;970:15;;;;;;;;;;;;;;;:45;;;;1037:25;1055:6;1037:8;:13;1046:3;1037:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;1021:8;:13;1030:3;1021:13;;;;;;;;;;;;;;;:41;;;;1097:38;1128:6;1097:7;:14;1105:5;1097:14;;;;;;;;;;;;;;;:26;1112:10;1097:26;;;;;;;;;;;;;;;;:30;;:38;;;;:::i;:::-;1068:7;:14;1076:5;1068:14;;;;;;;;;;;;;;;:26;1083:10;1068:26;;;;;;;;;;;;;;;:67;;;;1162:3;1146:28;;1155:5;1146:28;;;1167:6;1146:28;;;;;;;;;;;;;;;;;;1187:4;1180:11;;726:470;;;;;:::o;968:743:3:-;1063:4;1083:18;1104:14;1112:5;1104:3;:7;;:14;;;;:::i;:::-;1083:35;;1332:1;1295:33;1308:10;1320:7;1295:12;:33::i;:::-;:38;1335:14;;;;;;;;;;;;;;;;;;1287:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1287:63:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1379:1;1368:7;:12;;1382:11;;;;;;;;;;;;;;;;;;1360:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1360:34:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1447:1;1409:6;:18;1416:10;1409:18;;;;;;;;;;;;;;;:27;1428:7;1409:27;;;;;;;;;;;;;;;;;:34;;;:39;1405:93;;;1462:10;:22;1473:10;1462:22;;;;;;;;;;;;;;;1490:7;1462:36;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1462:36:3;;;;;;;;;;;;;;;;;;;;;;;;;;;1405:93;1509:32;1526:4;1533:7;1509:8;:32::i;:::-;;1582:37;;;;;;;;;1592:7;1582:37;;;;1601:10;1582:37;;;;1613:5;1582:37;;;;;1552:6;:18;1559:10;1552:18;;;;;;;;;;;;;;;:27;1571:7;1552:27;;;;;;;;;;;;;;;;;:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1654:7;1635:48;;;1642:10;1635:48;;;1663:7;1672:10;1635:48;;;;;;;;;;;;;;;;;;;;;;;;1700:4;1693:11;;968:743;;;;;;:::o;6068:614::-;6129:24;6169:20;6205:9;6217:1;6205:13;;6200:389;6224:10;:15;6235:3;6224:15;;;;;;;;;;;;;;;:22;;;;6220:1;:26;6200:389;;;6282:41;6299:3;6304:10;:15;6315:3;6304:15;;;;;;;;;;;;;;;6320:1;6304:18;;;;;;;;;;;;;;;;;;6282:16;:41::i;:::-;6267:56;;6356:1;6341:12;:16;6337:242;;;6396:34;6417:12;6396:16;:20;;:34;;;;:::i;:::-;6377:53;;6490:4;6448:6;:11;6455:3;6448:11;;;;;;;;;;;;;;;:31;6460:10;:15;6471:3;6460:15;;;;;;;;;;;;;;;6476:1;6460:18;;;;;;;;;;;;;;;;;;6448:31;;;;;;;;;;;;;;;;;:39;;;:46;;;;;;;;;;;;;;;;;;6531:10;:15;6542:3;6531:15;;;;;;;;;;;;;;;6547:1;6531:18;;;;;;;;;;;;;;;;;;6517:47;;;6526:3;6517:47;;;6551:12;6517:47;;;;;;;;;;;;;;;;;;6337:242;6248:3;;;;;;;6200:389;;;6624:1;6605:16;:20;6601:74;;;6639:4;:13;;;6653:3;6658:16;6639:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6639:36:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6639:36:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6639:36:3;;;;;;;;;;;;;;;;;6601:74;6068:614;;;;;:::o;726:146:4:-;779:13;;:16;;;;;;;;;;;;;832:33;;;;;;;;;841:13;;832:33;;;;856:5;832:33;;;;863:1;832:33;;;805:9;:24;815:13;;805:24;;;;;;;;;;;:60;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;726:146;:::o;451:26:2:-;;;;;;;;;;;;;:::o;2050:416:1:-;2153:19;2132:9;2108:8;:20;2117:10;2108:20;;;;;;;;;;;;;;;;:33;;2100:42;;;;;;;;2175:24;2189:9;2175:13;:24::i;:::-;2153:46;;2224:27;2241:9;2224:12;;:16;;:27;;;;:::i;:::-;2209:12;:42;;;;2284:35;2309:9;2284:8;:20;2293:10;2284:20;;;;;;;;;;;;;;;;:24;;:35;;;;:::i;:::-;2261:8;:20;2270:10;2261:20;;;;;;;;;;;;;;;:58;;;;2343:28;2359:11;2343;;:15;;:28;;;;:::i;:::-;2329:11;:42;;;;2381:10;:19;;:32;2401:11;2381:32;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2381:32:1;2429:30;2436:9;2447:11;2429:30;;;;;;;;;;;;;;;;;;;;;;;;2050:416;;:::o;3850:291:3:-;3932:14;4001:9;3971:14;3981:3;3971:9;:14::i;:::-;3962:23;;4013:1;4001:13;;3996:136;4020:10;:15;4031:3;4020:15;;;;;;;;;;;;;;;:22;;;;4016:1;:26;3996:136;;;4072:49;4083:37;4096:3;4101:10;:15;4112:3;4101:15;;;;;;;;;;;;;;;4117:1;4101:18;;;;;;;;;;;;;;;;;;4083:12;:37::i;:::-;4072:6;:10;;:49;;;;:::i;:::-;4063:58;;4044:3;;;;;;;3996:136;;;3850:291;;;;:::o;2061:606::-;2181:4;2201:18;2222:14;2230:5;2222:3;:7;;:14;;;;:::i;:::-;2201:35;;2308:1;2278:26;2291:3;2296:7;2278:12;:26::i;:::-;:31;2311:14;;;;;;;;;;;;;;;;;;2270:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2270:56:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2355:1;2344:7;:12;;2358:11;;;;;;;;;;;;;;;;;;2336:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2336:34:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2416:1;2385:6;:11;2392:3;2385:11;;;;;;;;;;;;;;;:20;2397:7;2385:20;;;;;;;;;;;;;;;;;:27;;;:32;2381:79;;;2431:10;:15;2442:3;2431:15;;;;;;;;;;;;;;;2452:7;2431:29;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2431:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;2381:79;2471:32;2488:4;2495:7;2471:8;:32::i;:::-;;2537:37;;;;;;;;;2547:7;2537:37;;;;2556:10;2537:37;;;;2568:5;2537:37;;;;;2514:6;:11;2521:3;2514:11;;;;;;;;;;;;;;;:20;2526:7;2514:20;;;;;;;;;;;;;;;;;:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2610:7;2598:41;;;2605:3;2598:41;;;2619:7;2628:10;2598:41;;;;;;;;;;;;;;;;;;;;;;;;2656:4;2649:11;;2061:606;;;;;;;:::o;5630:284::-;5731:14;5798:3;5765:6;:11;5772:3;5765:11;;;;;;;;;;;;;;;:20;5777:7;5765:20;;;;;;;;;;;;;;;;;:29;;;:36;;:69;;;;;5806:6;:11;5813:3;5806:11;;;;;;;;;;;;;;;:20;5818:7;5806:20;;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;5805:29;5765:69;5761:146;;;5880:6;:11;5887:3;5880:11;;;;;;;;;;;;;;;:20;5892:7;5880:20;;;;;;;;;;;;;;;;;:27;;;5871:36;;5761:146;5630:284;;;;:::o;391:25:2:-;;;;;;;;;;;;;:::o;2905:217:3:-;3002:14;3037:6;:11;3044:3;3037:11;;;;;;;;;;;;;;;:20;3049:7;3037:20;;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;3036:29;3032:83;;;3088:6;:11;3095:3;3088:11;;;;;;;;;;;;;;;:20;3100:7;3088:20;;;;;;;;;;;;;;;;;:27;;;3079:36;;3032:83;2905:217;;;;:::o;3679:432:9:-;3785:4;3799:16;3818:7;:19;3826:10;3818:19;;;;;;;;;;;;;;;:29;3838:8;3818:29;;;;;;;;;;;;;;;;3799:48;;3877:8;3857:16;:28;;3853:165;;;3927:1;3895:7;:19;3903:10;3895:19;;;;;;;;;;;;;;;:29;3915:8;3895:29;;;;;;;;;;;;;;;:33;;;;3853:165;;;3981:30;3994:16;3981:8;:12;;:30;;;;:::i;:::-;3949:7;:19;3957:10;3949:19;;;;;;;;;;;;;;;:29;3969:8;3949:29;;;;;;;;;;;;;;;:62;;;;3853:165;4049:8;4028:61;;4037:10;4028:61;;;4059:7;:19;4067:10;4059:19;;;;;;;;;;;;;;;:29;4079:8;4059:29;;;;;;;;;;;;;;;;4028:61;;;;;;;;;;;;;;;;;;4102:4;4095:11;;3679:432;;;;;:::o;1149:99:6:-;1205:7;1227:8;:16;1236:6;1227:16;;;;;;;;;;;;;;;;1220:23;;1149:99;;;:::o;216:47:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4928:454:3:-;5022:4;5086:1;5050:33;5063:10;5075:7;5050:12;:33::i;:::-;:37;5089:10;;;;;;;;;;;;;;;;;;5042:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5042:58:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5110:32;5127:4;5134:7;5110:8;:32::i;:::-;;5190:47;5229:7;5190:6;:18;5197:10;5190:18;;;;;;;;;;;;;;;:27;5209:7;5190:27;;;;;;;;;;;;;;;;;:34;;;:38;;:47;;;;:::i;:::-;5153:6;:18;5160:10;5153:18;;;;;;;;;;;;;;;:27;5172:7;5153:27;;;;;;;;;;;;;;;;;:34;;:84;;;;5272:7;5253:101;;;5260:10;5253:101;;;5281:6;:18;5288:10;5281:18;;;;;;;;;;;;;;;:27;5300:7;5281:27;;;;;;;;;;;;;;;;;:34;;;5317:6;:18;5324:10;5317:18;;;;;;;;;;;;;;;:27;5336:7;5317:27;;;;;;;;;;;;;;;;;:36;;;5253:101;;;;;;;;;;;;;;;;;;;;;;;;5371:4;5364:11;;4928:454;;;;:::o;422:23:2:-;;;;;;;;;;;;;:::o;357:28::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;425:26:1:-;;;;:::o;1420:496::-;1478:22;1503;1515:9;1503:11;:22::i;:::-;1478:47;;1556:14;1543:9;:27;;1535:36;;;;;;;;1597:27;1614:9;1597:12;;:16;;:27;;;;:::i;:::-;1582:12;:42;;;;1657:35;1682:9;1657:8;:20;1666:10;1657:20;;;;;;;;;;;;;;;;:24;;:35;;;;:::i;:::-;1634:8;:20;1643:10;1634:20;;;;;;;;;;;;;;;:58;;;;1716:31;1732:14;1716:11;;:15;;:31;;;;:::i;:::-;1702:11;:45;;;;1773:14;1761:9;:26;1757:104;;;1803:10;:19;;:47;1835:14;1823:9;:26;1803:47;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1803:47:1;1757:104;1876:33;1883:9;1894:14;1876:33;;;;;;;;;;;;;;;;;;;;;;;;1420:496;;:::o;448:36:4:-;;;;;;;;;;;;;;;;;;;;;;:::o;626:321:6:-;689:4;719:8;:20;728:10;719:20;;;;;;;;;;;;;;;;709:6;:30;;701:39;;;;;;;;769:1;754:17;;:3;:17;;;;746:26;;;;;;;;802:32;827:6;802:8;:20;811:10;802:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;779:8;:20;788:10;779:20;;;;;;;;;;;;;;;:55;;;;856:25;874:6;856:8;:13;865:3;856:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;840:8;:13;849:3;840:13;;;;;;;;;;;;;;;:41;;;;913:3;892:33;;901:10;892:33;;;918:6;892:33;;;;;;;;;;;;;;;;;;938:4;931:11;;626:321;;;;:::o;4327:404:3:-;4411:4;4475:1;4439:33;4452:10;4464:7;4439:12;:33::i;:::-;:37;4478:10;;;;;;;;;;;;;;;;;;4431:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4431:58:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4539:47;4580:5;4539:6;:18;4546:10;4539:18;;;;;;;;;;;;;;;:27;4558:7;4539:27;;;;;;;;;;;;;;;;;:36;;;:40;;:47;;;;:::i;:::-;4500:6;:18;4507:10;4500:18;;;;;;;;;;;;;;;:27;4519:7;4500:27;;;;;;;;;;;;;;;;;:36;;:86;;;;4621:7;4602:101;;;4609:10;4602:101;;;4630:6;:18;4637:10;4630:18;;;;;;;;;;;;;;;:27;4649:7;4630:27;;;;;;;;;;;;;;;;;:34;;;4666:6;:18;4673:10;4666:18;;;;;;;;;;;;;;;:27;4685:7;4666:27;;;;;;;;;;;;;;;;;:36;;;4602:101;;;;;;;;;;;;;;;;;;;;;;;;4720:4;4713:11;;4327:404;;;;:::o;6839:295::-;6926:24;6971:9;6983:1;6971:13;;6966:160;6990:10;:15;7001:3;6990:15;;;;;;;;;;;;;;;:22;;;;6986:1;:26;6966:160;;;7052:63;7073:41;7090:3;7095:10;:15;7106:3;7095:15;;;;;;;;;;;;;;;7111:1;7095:18;;;;;;;;;;;;;;;;;;7073:16;:41::i;:::-;7052:16;:20;;:63;;;;:::i;:::-;7033:82;;7014:3;;;;;;;6966:160;;;6839:295;;;;:::o;1988:147:2:-;2043:7;2069:59;2116:11;;2069:42;2083:27;2100:9;2083:12;;:16;;:27;;;;:::i;:::-;2069:13;:42::i;:::-;:46;;:59;;;;:::i;:::-;2062:66;;1988:147;;;:::o;2141:149::-;2198:7;2224:59;2240:42;2254:27;2271:9;2254:12;;:16;;:27;;;;:::i;:::-;2240:13;:42::i;:::-;2224:11;;:15;;:59;;;;:::i;:::-;2217:66;;2141:149;;;:::o;547:63:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2926:296:9:-;3027:4;3081:46;3115:11;3081:7;:19;3089:10;3081:19;;;;;;;;;;;;;;;:29;3101:8;3081:29;;;;;;;;;;;;;;;;:33;;:46;;;;:::i;:::-;3041:7;:19;3049:10;3041:19;;;;;;;;;;;;;;;:29;3061:8;3041:29;;;;;;;;;;;;;;;:87;;;;3160:8;3139:61;;3148:10;3139:61;;;3170:7;:19;3178:10;3170:19;;;;;;;;;;;;;;;:29;3190:8;3170:29;;;;;;;;;;;;;;;;3139:61;;;;;;;;;;;;;;;;;;3213:4;3206:11;;2926:296;;;;:::o;611:25:4:-;;;;:::o;2321:153:9:-;2420:7;2444;:15;2452:6;2444:15;;;;;;;;;;;;;;;:25;2460:8;2444:25;;;;;;;;;;;;;;;;2437:32;;2321:153;;;;:::o;1060:116:5:-;1120:7;1148:2;1142;:8;;1135:16;;;;;;1169:2;1164;:7;1157:14;;1060:116;;;;:::o;1238:128::-;1298:9;1324:2;1319;:7;1315:11;;1344:2;1339:1;:7;;1332:15;;;;;;1360:1;1353:8;;1238:128;;;;:::o;1775:207:2:-;1827:7;1846:12;1872:1;1861:8;;;;;;;;;;;:12;1846:27;;;;1890:85;1963:8;;;;;;;;;;;1955:17;;1943:8;;;;;;;;;;;1935:17;;:37;1928:2;:45;1890:32;1916:5;;;;;;;;;;;1890:32;;:21;1906:4;1896;1891:1;:9;1890:15;;:21;;;;:::i;:::-;:25;;:32;;;;:::i;:::-;:36;;:85;;;;:::i;:::-;1883:92;;1775:207;;;;:::o;665:283:5:-;725:7;941:2;936;:7;;;;;;;;929:14;;665:283;;;;:::o;234:1600:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.11;\n\nimport \"./EthPolynomialCurvedToken.sol\";\nimport \"./LockableToken.sol\";\n\n\n//Not sure why it needs to be both EthPolynomialCurvedToken and LockableToken, since EthPolynomialCurvedToken is already LockableToken\ncontract Voting is EthPolynomialCurvedToken, LockableToken {\n\n    //model proposal\n    struct Proposal {\n        uint id;\n        string text;\n        uint voteCount;\n    }\n    //store accounts that have voted\n    mapping(address=>bool) public voters;\n\n    // store proposal\n    //fetch proposal\n    mapping(uint => Proposal) public proposals;\n\n    //store proposals count\n    uint public proposalCount;\n\n    //voted event\n    event votedEvent (\n        uint indexed _candidateId\n    );\n\n    function addProposal (string _text) public {\n        proposalCount ++;\n        proposals[proposalCount] = Proposal(proposalCount, _text, 0);\n    }\n\n    function vote (uint _proposalId) public {\n        //could also be variable token amount \n        //function vote (uint _proposalId, uint _token) public {\n        // record that account has voted\n        voters[msg.sender] = true;\n\n        //check that voter has enough approved token \n\n        // require valid proposalId\n\n        //lock tokens till end of poll\n        //update the voteCount for a proposal\n        proposals[_proposalId].voteCount = proposals[_proposalId].voteCount + balanceOf(msg.sender);\n\n        //lock token for the duration of the poll\n        // to do: create data structure for poll and calculate time in seconds remaining till end of poll \n        // to do: reason should include pollID AND proposalId - since otherwise you cant vote lateron with newly purchased tokens on another proposal\n        lock(0x123456, balanceOf(msg.sender), 100);\n        \n\n        // trigger voted event\n        emit votedEvent(_proposalId);\n    }\n\n}",
  "sourcePath": "/Users/Achill/Projects/truffle/arena/contracts/Voting.sol",
  "ast": {
    "absolutePath": "/Users/Achill/Projects/truffle/arena/contracts/Voting.sol",
    "exportedSymbols": {
      "Voting": [
        1039
      ]
    },
    "id": 1040,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 951,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:4"
      },
      {
        "absolutePath": "/Users/Achill/Projects/truffle/arena/contracts/EthPolynomialCurvedToken.sol",
        "file": "./EthPolynomialCurvedToken.sol",
        "id": 952,
        "nodeType": "ImportDirective",
        "scope": 1040,
        "sourceUnit": 378,
        "src": "26:40:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/Achill/Projects/truffle/arena/contracts/LockableToken.sol",
        "file": "./LockableToken.sol",
        "id": 953,
        "nodeType": "ImportDirective",
        "scope": 1040,
        "sourceUnit": 950,
        "src": "67:29:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 954,
              "name": "EthPolynomialCurvedToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 377,
              "src": "253:24:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EthPolynomialCurvedToken_$377",
                "typeString": "contract EthPolynomialCurvedToken"
              }
            },
            "id": 955,
            "nodeType": "InheritanceSpecifier",
            "src": "253:24:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 956,
              "name": "LockableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 949,
              "src": "279:13:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LockableToken_$949",
                "typeString": "contract LockableToken"
              }
            },
            "id": 957,
            "nodeType": "InheritanceSpecifier",
            "src": "279:13:4"
          }
        ],
        "contractDependencies": [
          117,
          283,
          377,
          949,
          1229,
          1272,
          1304,
          1551
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1039,
        "linearizedBaseContracts": [
          1039,
          949,
          377,
          283,
          1551,
          1229,
          1272,
          1304,
          117
        ],
        "name": "Voting",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Voting.Proposal",
            "id": 964,
            "members": [
              {
                "constant": false,
                "id": 959,
                "name": "id",
                "nodeType": "VariableDeclaration",
                "scope": 964,
                "src": "347:7:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 958,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "347:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 961,
                "name": "text",
                "nodeType": "VariableDeclaration",
                "scope": 964,
                "src": "364:11:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 960,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "364:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 963,
                "name": "voteCount",
                "nodeType": "VariableDeclaration",
                "scope": 964,
                "src": "385:14:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 962,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "385:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Proposal",
            "nodeType": "StructDefinition",
            "scope": 1039,
            "src": "321:85:4",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 968,
            "name": "voters",
            "nodeType": "VariableDeclaration",
            "scope": 1039,
            "src": "448:36:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 967,
              "keyType": {
                "id": 965,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "456:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "448:22:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 966,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "465:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 972,
            "name": "proposals",
            "nodeType": "VariableDeclaration",
            "scope": 1039,
            "src": "534:42:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$964_storage_$",
              "typeString": "mapping(uint256 => struct Voting.Proposal)"
            },
            "typeName": {
              "id": 971,
              "keyType": {
                "id": 969,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "542:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "534:25:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$964_storage_$",
                "typeString": "mapping(uint256 => struct Voting.Proposal)"
              },
              "valueType": {
                "contractScope": null,
                "id": 970,
                "name": "Proposal",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 964,
                "src": "550:8:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Proposal_$964_storage_ptr",
                  "typeString": "struct Voting.Proposal"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 974,
            "name": "proposalCount",
            "nodeType": "VariableDeclaration",
            "scope": 1039,
            "src": "611:25:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 973,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "611:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 978,
            "name": "votedEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 977,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 976,
                  "indexed": true,
                  "name": "_candidateId",
                  "nodeType": "VariableDeclaration",
                  "scope": 978,
                  "src": "688:25:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 975,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "688:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "678:41:4"
            },
            "src": "661:59:4"
          },
          {
            "body": {
              "id": 996,
              "nodeType": "Block",
              "src": "769:103:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "779:16:4",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 983,
                      "name": "proposalCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 974,
                      "src": "779:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 985,
                  "nodeType": "ExpressionStatement",
                  "src": "779:16:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 986,
                        "name": "proposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 972,
                        "src": "805:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$964_storage_$",
                          "typeString": "mapping(uint256 => struct Voting.Proposal storage ref)"
                        }
                      },
                      "id": 988,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 987,
                        "name": "proposalCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 974,
                        "src": "815:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "805:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$964_storage",
                        "typeString": "struct Voting.Proposal storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 990,
                          "name": "proposalCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 974,
                          "src": "841:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 991,
                          "name": "_text",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 980,
                          "src": "856:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "863:1:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 989,
                        "name": "Proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 964,
                        "src": "832:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Proposal_$964_storage_ptr_$",
                          "typeString": "type(struct Voting.Proposal storage pointer)"
                        }
                      },
                      "id": 993,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "832:33:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$964_memory",
                        "typeString": "struct Voting.Proposal memory"
                      }
                    },
                    "src": "805:60:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$964_storage",
                      "typeString": "struct Voting.Proposal storage ref"
                    }
                  },
                  "id": 995,
                  "nodeType": "ExpressionStatement",
                  "src": "805:60:4"
                }
              ]
            },
            "documentation": null,
            "id": 997,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "addProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 981,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 980,
                  "name": "_text",
                  "nodeType": "VariableDeclaration",
                  "scope": 997,
                  "src": "748:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 979,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "748:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "747:14:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 982,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "769:0:4"
            },
            "scope": 1039,
            "src": "726:146:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1037,
              "nodeType": "Block",
              "src": "918:913:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1002,
                        "name": "voters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 968,
                        "src": "1081:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1005,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1003,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1566,
                          "src": "1088:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1088:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1081:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1102:4:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1081:25:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1008,
                  "nodeType": "ExpressionStatement",
                  "src": "1081:25:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1009,
                          "name": "proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 972,
                          "src": "1294:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$964_storage_$",
                            "typeString": "mapping(uint256 => struct Voting.Proposal storage ref)"
                          }
                        },
                        "id": 1011,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1010,
                          "name": "_proposalId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 999,
                          "src": "1304:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1294:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$964_storage",
                          "typeString": "struct Voting.Proposal storage ref"
                        }
                      },
                      "id": 1012,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "voteCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 963,
                      "src": "1294:32:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1021,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1013,
                            "name": "proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 972,
                            "src": "1329:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$964_storage_$",
                              "typeString": "mapping(uint256 => struct Voting.Proposal storage ref)"
                            }
                          },
                          "id": 1015,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1014,
                            "name": "_proposalId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 999,
                            "src": "1339:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1329:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$964_storage",
                            "typeString": "struct Voting.Proposal storage ref"
                          }
                        },
                        "id": 1016,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "voteCount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 963,
                        "src": "1329:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1018,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1566,
                              "src": "1374:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1019,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1374:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1017,
                          "name": "balanceOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1228
                          ],
                          "referencedDeclaration": 1228,
                          "src": "1364:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 1020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1364:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1329:56:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1294:91:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1023,
                  "nodeType": "ExpressionStatement",
                  "src": "1294:91:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "3078313233343536",
                        "id": 1025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1708:8:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1193046_by_1",
                          "typeString": "int_const 1193046"
                        },
                        "value": "0x123456"
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1027,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1566,
                              "src": "1728:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1028,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1728:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1026,
                          "name": "balanceOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1228
                          ],
                          "referencedDeclaration": 1228,
                          "src": "1718:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 1029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1718:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "313030",
                        "id": 1030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1741:3:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1193046_by_1",
                          "typeString": "int_const 1193046"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "id": 1024,
                      "name": "lock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        479
                      ],
                      "referencedDeclaration": 479,
                      "src": "1703:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (bytes32,uint256,uint256) returns (bool)"
                      }
                    },
                    "id": 1031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1703:42:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1032,
                  "nodeType": "ExpressionStatement",
                  "src": "1703:42:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1034,
                        "name": "_proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 999,
                        "src": "1812:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1033,
                      "name": "votedEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 978,
                      "src": "1801:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1801:23:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1036,
                  "nodeType": "EmitStatement",
                  "src": "1796:28:4"
                }
              ]
            },
            "documentation": null,
            "id": 1038,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "vote",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1000,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 999,
                  "name": "_proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1038,
                  "src": "893:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 998,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "893:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "892:18:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 1001,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "918:0:4"
            },
            "scope": 1039,
            "src": "878:953:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1040,
        "src": "234:1600:4"
      }
    ],
    "src": "0:1834:4"
  },
  "legacyAST": {
    "absolutePath": "/Users/Achill/Projects/truffle/arena/contracts/Voting.sol",
    "exportedSymbols": {
      "Voting": [
        1039
      ]
    },
    "id": 1040,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 951,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:4"
      },
      {
        "absolutePath": "/Users/Achill/Projects/truffle/arena/contracts/EthPolynomialCurvedToken.sol",
        "file": "./EthPolynomialCurvedToken.sol",
        "id": 952,
        "nodeType": "ImportDirective",
        "scope": 1040,
        "sourceUnit": 378,
        "src": "26:40:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/Achill/Projects/truffle/arena/contracts/LockableToken.sol",
        "file": "./LockableToken.sol",
        "id": 953,
        "nodeType": "ImportDirective",
        "scope": 1040,
        "sourceUnit": 950,
        "src": "67:29:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 954,
              "name": "EthPolynomialCurvedToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 377,
              "src": "253:24:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EthPolynomialCurvedToken_$377",
                "typeString": "contract EthPolynomialCurvedToken"
              }
            },
            "id": 955,
            "nodeType": "InheritanceSpecifier",
            "src": "253:24:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 956,
              "name": "LockableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 949,
              "src": "279:13:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LockableToken_$949",
                "typeString": "contract LockableToken"
              }
            },
            "id": 957,
            "nodeType": "InheritanceSpecifier",
            "src": "279:13:4"
          }
        ],
        "contractDependencies": [
          117,
          283,
          377,
          949,
          1229,
          1272,
          1304,
          1551
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1039,
        "linearizedBaseContracts": [
          1039,
          949,
          377,
          283,
          1551,
          1229,
          1272,
          1304,
          117
        ],
        "name": "Voting",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Voting.Proposal",
            "id": 964,
            "members": [
              {
                "constant": false,
                "id": 959,
                "name": "id",
                "nodeType": "VariableDeclaration",
                "scope": 964,
                "src": "347:7:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 958,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "347:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 961,
                "name": "text",
                "nodeType": "VariableDeclaration",
                "scope": 964,
                "src": "364:11:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 960,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "364:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 963,
                "name": "voteCount",
                "nodeType": "VariableDeclaration",
                "scope": 964,
                "src": "385:14:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 962,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "385:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Proposal",
            "nodeType": "StructDefinition",
            "scope": 1039,
            "src": "321:85:4",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 968,
            "name": "voters",
            "nodeType": "VariableDeclaration",
            "scope": 1039,
            "src": "448:36:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 967,
              "keyType": {
                "id": 965,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "456:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "448:22:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 966,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "465:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 972,
            "name": "proposals",
            "nodeType": "VariableDeclaration",
            "scope": 1039,
            "src": "534:42:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$964_storage_$",
              "typeString": "mapping(uint256 => struct Voting.Proposal)"
            },
            "typeName": {
              "id": 971,
              "keyType": {
                "id": 969,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "542:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "534:25:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$964_storage_$",
                "typeString": "mapping(uint256 => struct Voting.Proposal)"
              },
              "valueType": {
                "contractScope": null,
                "id": 970,
                "name": "Proposal",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 964,
                "src": "550:8:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Proposal_$964_storage_ptr",
                  "typeString": "struct Voting.Proposal"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 974,
            "name": "proposalCount",
            "nodeType": "VariableDeclaration",
            "scope": 1039,
            "src": "611:25:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 973,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "611:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 978,
            "name": "votedEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 977,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 976,
                  "indexed": true,
                  "name": "_candidateId",
                  "nodeType": "VariableDeclaration",
                  "scope": 978,
                  "src": "688:25:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 975,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "688:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "678:41:4"
            },
            "src": "661:59:4"
          },
          {
            "body": {
              "id": 996,
              "nodeType": "Block",
              "src": "769:103:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "779:16:4",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 983,
                      "name": "proposalCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 974,
                      "src": "779:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 985,
                  "nodeType": "ExpressionStatement",
                  "src": "779:16:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 986,
                        "name": "proposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 972,
                        "src": "805:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$964_storage_$",
                          "typeString": "mapping(uint256 => struct Voting.Proposal storage ref)"
                        }
                      },
                      "id": 988,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 987,
                        "name": "proposalCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 974,
                        "src": "815:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "805:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$964_storage",
                        "typeString": "struct Voting.Proposal storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 990,
                          "name": "proposalCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 974,
                          "src": "841:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 991,
                          "name": "_text",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 980,
                          "src": "856:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "863:1:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 989,
                        "name": "Proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 964,
                        "src": "832:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Proposal_$964_storage_ptr_$",
                          "typeString": "type(struct Voting.Proposal storage pointer)"
                        }
                      },
                      "id": 993,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "832:33:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$964_memory",
                        "typeString": "struct Voting.Proposal memory"
                      }
                    },
                    "src": "805:60:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$964_storage",
                      "typeString": "struct Voting.Proposal storage ref"
                    }
                  },
                  "id": 995,
                  "nodeType": "ExpressionStatement",
                  "src": "805:60:4"
                }
              ]
            },
            "documentation": null,
            "id": 997,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "addProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 981,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 980,
                  "name": "_text",
                  "nodeType": "VariableDeclaration",
                  "scope": 997,
                  "src": "748:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 979,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "748:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "747:14:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 982,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "769:0:4"
            },
            "scope": 1039,
            "src": "726:146:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1037,
              "nodeType": "Block",
              "src": "918:913:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1002,
                        "name": "voters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 968,
                        "src": "1081:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1005,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1003,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1566,
                          "src": "1088:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1088:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1081:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1102:4:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1081:25:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1008,
                  "nodeType": "ExpressionStatement",
                  "src": "1081:25:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1009,
                          "name": "proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 972,
                          "src": "1294:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$964_storage_$",
                            "typeString": "mapping(uint256 => struct Voting.Proposal storage ref)"
                          }
                        },
                        "id": 1011,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1010,
                          "name": "_proposalId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 999,
                          "src": "1304:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1294:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$964_storage",
                          "typeString": "struct Voting.Proposal storage ref"
                        }
                      },
                      "id": 1012,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "voteCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 963,
                      "src": "1294:32:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1021,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1013,
                            "name": "proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 972,
                            "src": "1329:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$964_storage_$",
                              "typeString": "mapping(uint256 => struct Voting.Proposal storage ref)"
                            }
                          },
                          "id": 1015,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1014,
                            "name": "_proposalId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 999,
                            "src": "1339:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1329:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$964_storage",
                            "typeString": "struct Voting.Proposal storage ref"
                          }
                        },
                        "id": 1016,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "voteCount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 963,
                        "src": "1329:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1018,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1566,
                              "src": "1374:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1019,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1374:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1017,
                          "name": "balanceOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1228
                          ],
                          "referencedDeclaration": 1228,
                          "src": "1364:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 1020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1364:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1329:56:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1294:91:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1023,
                  "nodeType": "ExpressionStatement",
                  "src": "1294:91:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "3078313233343536",
                        "id": 1025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1708:8:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1193046_by_1",
                          "typeString": "int_const 1193046"
                        },
                        "value": "0x123456"
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1027,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1566,
                              "src": "1728:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1028,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1728:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1026,
                          "name": "balanceOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1228
                          ],
                          "referencedDeclaration": 1228,
                          "src": "1718:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 1029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1718:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "313030",
                        "id": 1030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1741:3:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1193046_by_1",
                          "typeString": "int_const 1193046"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "id": 1024,
                      "name": "lock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        479
                      ],
                      "referencedDeclaration": 479,
                      "src": "1703:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (bytes32,uint256,uint256) returns (bool)"
                      }
                    },
                    "id": 1031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1703:42:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1032,
                  "nodeType": "ExpressionStatement",
                  "src": "1703:42:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1034,
                        "name": "_proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 999,
                        "src": "1812:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1033,
                      "name": "votedEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 978,
                      "src": "1801:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1801:23:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1036,
                  "nodeType": "EmitStatement",
                  "src": "1796:28:4"
                }
              ]
            },
            "documentation": null,
            "id": 1038,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "vote",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1000,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 999,
                  "name": "_proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1038,
                  "src": "893:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 998,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "893:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "892:18:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 1001,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "918:0:4"
            },
            "scope": 1039,
            "src": "878:953:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1040,
        "src": "234:1600:4"
      }
    ],
    "src": "0:1834:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x41ae09e8e3ce85b396ca1fa99396402d1368a16a",
      "transactionHash": "0xd0584ab31b69a1407cda5d64dc30e75017537c81d7da618537d5f635515eab75"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0xc4fb1e8a4dfb0a2d592764c3b972dcdd2eaafe69",
      "transactionHash": "0x886bad80a795890a89b0eba978f30febab394ea7a4c4e854604f44aad27bb552"
    }
  },
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-10-03T13:02:46.591Z"
}